## Q2. x축은 poptotal, y축은 popasian으로 된 산점도
ggplot(data = midwest, aes(x = poptotal, y = popasian)) + geom_point() +
xlim(0,500000) +
ylim(0,10000)
# 08-3
## Q1.
kk=table(mpg$class)
tt=barplot(kk,col=rainbow(8),ylim=c(0,70))
text(tt,kk,paste0(kk,"대"),pos=3,col=2,cex=2)
df=as.data.frame(mpg %>%
filter(class=="suv")%>%
group_by(manufacturer)%>%
summarise(mean_cty=mean(cty),
mean_hwy=mean(hwy))%>%
arrange(desc(mean_cty))%>%
head(5))
# 08-2
mpg <- as.data.frame(ggplot2::mpg)
midwest <- as.data.frame(ggplot2::midwest)
## Q1. x축은 cty, y축은 hwy로 된 산점도
ggplot(data = mpg, aes(x = cty, y = hwy)) + geom_point()
## Q2. x축은 poptotal, y축은 popasian으로 된 산점도
ggplot(data = midwest, aes(x = poptotal, y = popasian)) + geom_point() +
xlim(0,500000) +
ylim(0,10000)
# 08-2
mpg <- as.data.frame(ggplot2::mpg)
midwest <- as.data.frame(ggplot2::midwest)
## Q1. x축은 cty, y축은 hwy로 된 산점도
ggplot(data = mpg, aes(x = cty, y = hwy)) + geom_point()
## Q2. x축은 poptotal, y축은 popasian으로 된 산점도
ggplot(data = midwest, aes(x = poptotal, y = popasian)) + geom_point() +
xlim(0,500000) +
ylim(0,10000)
install.packages(ggplot2)
library(ggplot2)
## Q1. x축은 cty, y축은 hwy로 된 산점도
ggplot(data = mpg, aes(x = cty, y = hwy)) + geom_point()
## Q2. x축은 poptotal, y축은 popasian으로 된 산점도
ggplot(data = midwest, aes(x = poptotal, y = popasian)) + geom_point() +
xlim(0,500000) +
ylim(0,10000)
# 08-3
## Q1.
kk=table(mpg$class)
tt=barplot(kk,col=rainbow(8),ylim=c(0,70))
text(tt,kk,paste0(kk,"대"),pos=3,col=2,cex=2)
df=as.data.frame(mpg %>%
filter(class=="suv")%>%
group_by(manufacturer)%>%
summarise(mean_cty=mean(cty),
mean_hwy=mean(hwy))%>%
arrange(desc(mean_cty))%>%
head(5))
# 08-2
mpg <- as.data.frame(ggplot2::mpg)
midwest <- as.data.frame(ggplot2::midwest)
library(ggplot2)
## Q1. x축은 cty, y축은 hwy로 된 산점도
ggplot(data = mpg, aes(x = cty, y = hwy)) + geom_point()
## Q2. x축은 poptotal, y축은 popasian으로 된 산점도
ggplot(data = midwest, aes(x = poptotal, y = popasian)) + geom_point() +
xlim(0,500000) +
ylim(0,10000)
# 08-3
## Q1.
kk=table(mpg$class)
tt=barplot(kk,col=rainbow(8),ylim=c(0,70))
text(tt,kk,paste0(kk,"대"),pos=3,col=2,cex=2)
df=as.data.frame(mpg %>%
filter(class=="suv")%>%
group_by(manufacturer)%>%
summarise(mean_cty=mean(cty),
mean_hwy=mean(hwy))%>%
arrange(desc(mean_cty))%>%
head(5))
# 08-2
par(family='Unbatang')
mpg <- as.data.frame(ggplot2::mpg)
midwest <- as.data.frame(ggplot2::midwest)
library(ggplot2)
## Q1. x축은 cty, y축은 hwy로 된 산점도
ggplot(data = mpg, aes(x = cty, y = hwy)) + geom_point()
## Q2. x축은 poptotal, y축은 popasian으로 된 산점도
ggplot(data = midwest, aes(x = poptotal, y = popasian)) + geom_point() +
xlim(0,500000) +
ylim(0,10000)
# 08-3
## Q1.
kk=table(mpg$class)
tt=barplot(kk,col=rainbow(8),ylim=c(0,70))
text(tt,kk,paste0(kk,"대"),pos=3,col=2,cex=2)
df=as.data.frame(mpg %>%
filter(class=="suv")%>%
group_by(manufacturer)%>%
summarise(mean_cty=mean(cty),
mean_hwy=mean(hwy))%>%
arrange(desc(mean_cty))%>%
head(5))
df
ggplot(data=df,aes(x=reorder(manufacturer,mean_cty),y=mean_cty)) +
geom_col(fill=rainbow(5)) +
coord_flip() +
xlab("차종") +
ylab("평균도시연비")
tt=barplot(kk,col=rainbow(8),ylim=c(0,70))
text(tt,kk,paste0(kk,"대"),pos=3,col=2,cex=2)
# 08-3
## Q1.
kk=table(mpg$class)
tt=barplot(kk,col=rainbow(8),ylim=c(0,70))
text(tt,kk,paste0(kk,"대"),pos=3,col=2,cex=2)
df=as.data.frame(mpg %>%
filter(class=="suv")%>%
group_by(manufacturer)%>%
summarise(mean_cty=mean(cty),
mean_hwy=mean(hwy))%>%
arrange(desc(mean_cty))%>%
head(5))
df
ggplot(data=df,aes(x=reorder(manufacturer,mean_cty),y=mean_cty)) +
geom_col(fill=rainbow(5)) +
coord_flip() +
xlab("차종") +
ylab("평균도시연비")
# 08-2
mpg <- as.data.frame(ggplot2::mpg)
midwest <- as.data.frame(ggplot2::midwest)
model = step(lm(QTY~.,data=helth_beverage_feature),direction="forward")
summary(model)
setwd("/home/ryung/Development/R_lecture/term")
setwd("/Users/ryung/Desktop/Development/R_lecture/Rdata")
getwd()
data = read.csv("sales_data_new.csv",encoding = "UTF-8")
par(family = "AppleGothic")
data = read.csv("sales_data_new.csv",encoding = "UTF-8")
setwd("/Users/ryung/Desktop/Development/R_lecture/term")
getwd()
par(family = "AppleGothic")
data = read.csv("sales_data_new.csv",encoding = "UTF-8")
head(data)
data[,3:10]
## 건강음료에 대한 다중 회귀 분석
helth_beverage=data[1:60,]
helth_beverage
helth_beverage_feature = helth_beverage[4:10]
helth_beverage_feature
#vif(helth_beverage_feature)
cov(helth_beverage_feature)
cor(helth_beverage_feature)
model = lm(QTY~.,helth_beverage_feature)
summary(model)
## Forward selection
model = lm(QTY~SALEDAY,helth_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE,helth_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE+ITEM_CNT,helth_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE+ITEM_CNT+MAXTEMP,helth_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE+ITEM_CNT+MAXTEMP+RAIN_DAY,helth_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE+ITEM_CNT+MAXTEMP+RAIN_DAY+HOLIDAY,helth_beverage_feature)
summary(model)
model = step(lm(QTY~.,data=helth_beverage_feature),direction="forward")
summary(model)
model = step(lm(QTY~,data=helth_beverage_feature),direction="forward")
model = step(lm(QTY~SALEDAY,data=helth_beverage_feature),direction="forward")
summary(model)
## 모든 feature를 포함한 다중회귀
lm.fit = lm(QTY~., data = helth_beverage_feature)
summary(lm.fit)
lm.fit2 = step(lm.fit, method="forward")
## 모든 feature를 포함한 다중회귀
lm.fit = lm(QTY, data = helth_beverage_feature)
## 모든 feature를 포함한 다중회귀
lm.fit = lm(QTY~1, data = helth_beverage_feature)
summary(lm.fit)
lm.fit2 = step(lm.fit, method="forward")
summary(lm.fit2)
## 모든 feature를 포함한 다중회귀
lm.fit = lm(QTY~1, data = helth_beverage_feature)
biggest <- formula(lm(QTY~.,helth_beverage_feature))
biggest
summary(lm.fit)
lm.fit2 = step(lm.fit, method="forward",scope = biggest)
summary(lm.fit2)
## Backward Selection
lm.fit = lm(QTY~., data = helth_beverage_feature)
lm.fit2 = step(lm.fit, method="backward")
summary(lm.fit2)
## Forward Selection
lm.fit = lm(QTY~1, data = helth_beverage_feature)
biggest <- formula(lm(QTY~.,helth_beverage_feature))
biggest
summary(lm.fit)
lm.fit2 = step(lm.fit, method="forward",scope = biggest)
summary(lm.fit2)
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=helth_beverage_feature,nbest=5)
summary(leaps)
summary(leaps)
plot(leaps)
plot(leaps$adjr2)
plot(leaps,scale="adjr2")
plot(leaps,scale="cp")
plot(leaps,scale="Cp")
plot(leaps,scale="adjr2")
plot(leaps)
plot(leaps,scale="adjr2")
plot(leaps,scale="Cp")
plot(leaps,scale="adjr2")
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=juice_beverage_feature,nbest=6)
## 과즙음료에 대한 다중 회귀 분석
juice_beverage=data[61:120,]
juice_beverage
juice_beverage_feature = juice_beverage[4:10]
juice_beverage_feature
cov(juice_beverage_feature)
cor(juice_beverage_feature)
lm.fit = lm(QTY~., data = juice_beverage_feature)
summary(lm.fit)
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=juice_beverage_feature,nbest=5)
summary(leaps)
plot(leaps)
plot(leaps,scale = "adjr2")
## 차 음료에 대한 다중 회귀 분석
tea_beverage=data[120:180,]
tea_beverage
tea_beverage_feature = tea_beverage[4:10]
tea_beverage_feature
cov(tea_beverage_feature)
cor(tea_beverage_feature)
## 차 음료에 대한 다중 회귀 분석
tea_beverage=data[120:180,]
tea_beverage
tea_beverage_feature = tea_beverage[4:10]
tea_beverage_feature
cov(tea_beverage_feature)
cor(tea_beverage_feature)
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=tea_beverage_feature,nbest=6)
summary(leaps)
plot(leaps)
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=tea_beverage_feature,nbest=2)
summary(leaps)
plot(leaps)
leaps=regsubsets(QTY~.,data=tea_beverage_feature,nbest=5)
summary(leaps)
plot(leaps)
leaps=regsubsets(QTY~.,data=tea_beverage_feature,nbest=1)
summary(leaps)
plot(leaps)
plot(leaps, scale = "adjr2")
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=helth_beverage_feature,nbest=1)
summary(leaps)
plot(leaps)
plot(leaps,scale="adjr2")
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=juice_beverage_feature,nbest=5)
summary(leaps)
plot(leaps)
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=juice_beverage_feature,nbest=1)
summary(leaps)
plot(leaps)
plot(leaps,scale = "adjr2")
setwd("../Rdata")
getwd()
View(attitude)
cov(attitude)     # 공분산 함수
cor(attitude)     # 상관계수.
with(attitude,cor.test(rating, complaints))
cor.test(attitude$rating,attitude$complaints)
plot(attitude$rating,attitude$complaints)
fa=c(150,160,170,180,190)
su=c(176,179,182,178,185)
fasu=data.frame(fa,su)
fasu
lm(su~fa,data=fasu)
data=read.csv("cars.csv")
data
out=lm(dist~speed,data=data)
summary(out)
plot(dist~speed,data=cars,col="blue")
abline(out,col="red")
out1=lm(dist~speed+0,data=data)
summary(lm(dist~speed+0,data=data))
plot(out1)
plot(out1)
shapiro.test(log(data$dist))
plot(out1)
summary(lm(dist~speed+0,data=data))
plot(out1)
shapiro.test(sqrt(data$dist))
out3=lm(sqrt(dist)~speed+0,data=data)
shapiro.test(data$dist)
shapiro.test(log(data$dist))
shapiro.test(data$dist)
shapiro.test(log(data$dist))
shapiro.test(sqrt(data$dist))
out3=lm(sqrt(dist)~speed+0,data=data)
summary(out3)
plot(out3)
cbind(new$speed,predict(out3,new,interval = "prediction"))
cbind(new$speed,predict(out3,new,interval = "confidence"))
cbind(new$speed,predict(out3,new,interval = "prediction"))
#????ȸ?ͺм?
data=read.csv("salary.csv")
head(data)
out=lm(salary~experience+score,data=data)
summary(out)
plot(out)
summary(out)
backward=step(out,direction="backward",trace=FALSE)
summary(backward)
both=step(out,direction="both",trace=FALSE)
summary(both)
##All subset method
#install.packages("leaps")
library(leaps)
leaps=regsubsets(rating~.,data=attitude,nbest=5)
summary(leaps)
plot(leaps,scale='bic')
out_bic=lm(rating~complaints,data=attitude)
summary(out_bic)
plot(leaps,scale='Cp')
out_cp=lm(rating~complaints+learning,data=attitude)
summary(out_cp)
plot(leaps,scale="adjr2")
out_adjr=lm(rating~complaints+learning+advance,data=attitude)
summary(out_adjr)
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=helth_beverage_feature,nbest=1)
summary(leaps)
plot(leaps)
plot(leaps,scale="adjr2")
#best
model = lm(QTY~ITEM_CNT+PRICE+SALEDAY+RAIN_DAY,helth_beverage_feature)
summary(model)
plot(model)
## 모든 feature를 포함한 다중회귀
lm.fit = lm(QTY~., data = helth_beverage_feature)
summary(lm.fit)
## forward와 backward 방식을 전부 써서 좋은 결과만 가져온다.(both)
lm.fit2 = step(lm.fit,method="both")
summary(lm.fit2)
lm.yhat2=predict(lm.fit2,newdata=helth_beverage_feature)
kk=mean((lm.yhat2-helth_beverage_feature$QTY)^2)
sqrt(kk)
plot(lm.yhat2,helth_beverage_feature$QTY)
abline(a=0,b=1,col=2)
#best
model = lm(QTY~ITEM_CNT+PRICE+SALEDAY+RAIN_DAY,helth_beverage_feature)
summary(model)
plot(model)
## 건강음료에 대한 다중 회귀 분석
helth_beverage=data[1:60,]
helth_beverage
helth_beverage_feature = helth_beverage[4:10]
helth_beverage_feature
#vif(helth_beverage_feature)
cov(helth_beverage_feature)
cor(helth_beverage_feature)
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=helth_beverage_feature,nbest=1)
summary(leaps)
plot(leaps)
plot(leaps,scale="adjr2")
#best
model = lm(QTY~ITEM_CNT+PRICE+SALEDAY+RAIN_DAY,helth_beverage_feature)
summary(model)
plot(model)
summary(model)
#best
model = lm(QTY~ITEM_CNT+PRICE+SALEDAY+RAIN_DAY,helth_beverage_feature)
summary(model)
plot(model)
plot(model)
#best
model = lm(QTY~ITEM_CNT+PRICE+SALEDAY+RAIN_DAY,helth_beverage_feature)
summary(model)
plot(model)
plot(model)
mfrow()
par(mfrow=c(2, 2))
#best
model = lm(QTY~ITEM_CNT+PRICE+SALEDAY+RAIN_DAY,helth_beverage_feature)
summary(model)
mfrow()
par(mfrow=c(2, 2))
#best
model = lm(QTY~ITEM_CNT+PRICE+SALEDAY+RAIN_DAY,helth_beverage_feature)
summary(model)
summary(model)
par(mfrow=c(2, 2))
plot(model)
## 과즙음료에 대한 다중 회귀 분석
juice_beverage=data[61:120,]
juice_beverage
juice_beverage_feature = juice_beverage[4:10]
juice_beverage_feature
cov(juice_beverage_feature)
cor(juice_beverage_feature)
lm.fit = lm(QTY~., data = juice_beverage_feature)
summary(lm.fit)
plot(leaps,scale = "adjr2")
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=juice_beverage_feature,nbest=1)
summary(leaps)
plot(leaps)
plot(leaps,scale = "adjr2")
#par(mfrow=c(2, 2))
plot(model)
helth_beverage_feature_train = helth_beverage_feature[1:42,]
helth_beverage_feature_train = helth_beverage_feature[1:42,]
helth_beverage_feature_train = helth_beverage_feature[1:42,]
setwd("/Users/ryung/Desktop/Development/R_lecture/term")
getwd()
par(family = "AppleGothic")
data = read.csv("sales_data_new.csv",encoding = "UTF-8")
head(data)
data[,3:10]
## 차 음료에 대한 다중 회귀 분석
tea_beverage=data[120:180,]
tea_beverage
tea_beverage_feature = tea_beverage[4:10]
tea_beverage_feature
cov(tea_beverage_feature)
cor(tea_beverage_feature)
## Forward selection
model = lm(QTY~SALEDAY,tea_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE,tea_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE+ITEM_CNT,tea_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE+ITEM_CNT+MAXTEMP,tea_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE+ITEM_CNT+MAXTEMP+RAIN_DAY,tea_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE+ITEM_CNT+MAXTEMP+RAIN_DAY+HOLIDAY,tea_beverage_feature)
summary(model)
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=tea_beverage_feature,nbest=1)
summary(leaps)
plot(leaps)
plot(leaps, scale = "adjr2")
#best
model = lm(QTY~ITEM_CNT+MAXTEMP+SALEDAY,tea_beverage_feature)
summary(model)
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=tea_beverage_feature,nbest=1)
## 과즙음료에 대한 다중 회귀 분석
juice_beverage=data[61:120,]
juice_beverage
juice_beverage_feature = juice_beverage[4:10]
juice_beverage_feature
cov(juice_beverage_feature)
cor(juice_beverage_feature)
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=juice_beverage_feature,nbest=1)
summary(leaps)
plot(leaps)
plot(leaps,scale = "adjr2")
#best
model = lm(QTY~ITEM_CNT+PRICE+MAXTEMP+SALEDAY+RAIN_DAY,juice_beverage_feature)
summary(model)
#best
model = lm(QTY~ITEM_CNT+PRICE+MAXTEMP+SALEDAY+RAIN_DAY+HOLIDAY,juice_beverage_feature)
summary(model)
## 모든 feature를 포함한 다중회귀
lm.fit = lm(QTY~., data = juice_beverage_feature)
summary(lm.fit)
#best
model = lm(QTY~ITEM_CNT+PRICE+MAXTEMP+SALEDAY+RAIN_DAY+HOLIDAY,juice_beverage_feature)
summary(model)
## 차 음료에 대한 다중 회귀 분석
tea_beverage=data[120:180,]
tea_beverage
tea_beverage_feature = tea_beverage[4:10]
tea_beverage_feature
cov(tea_beverage_feature)
cor(tea_beverage_feature)
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=tea_beverage_feature,nbest=1)
summary(leaps)
plot(leaps)
plot(leaps, scale = "adjr2")
#best
model = lm(QTY~ITEM_CNT+MAXTEMP+SALEDAY+RAIN_DAY+HOLIDAY,tea_beverage_feature)
summary(model)
