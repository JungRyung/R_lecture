("D:/development/R_lecture/Rdata")
## movie ?겕濡ㅻ쭅?쓣 ?넻?븳 ?떆?굹由ъ삤 遺꾩꽍
library(rvest)
## movie ?겕濡ㅻ쭅?쓣 ?넻?븳 ?떆?굹由ъ삤 遺꾩꽍
library(rvest)
## movie ?겕濡ㅻ쭅?쓣 ?넻?븳 ?떆?굹由ъ삤 遺꾩꽍
library(rvest)
library(stringr)
library(dplyr)
title=c()
grade=c()
time=c()
t_css=".color_b"
gr_css=".list_netizen_score em"
pt_css=".title+ .num"
base_url = "https://movie.naver.com/movie/point/af/list.nhn?&page="
for(i in 1:100){
cr_url = paste0(base_url,1)
hdoc=read_html(cr_url,encoding = "cp949")
n_title=html_nodes(hdoc,t_css)
n_title
n_gr=html_nodes(hdoc,gr_css)
n_pt=html_nodes(hdoc,pt_css)
## ?뀓?뒪?듃 異붿텧
title_part=html_text(n_title)
grade_part=html_text(n_gr)
pt_part=html_text(n_pt)
time_part=str_sub(pt_part,-8)
title=c(title,title_part)
grade=c(grade,grade_part)
time=c(time,time_part)
}
movie = data.frame(title,grade,time)
View(movie)
write.csv(movie,"movie.csv")
data=read.csv("movie.csv")
head(data)
data%>%
select(title,grade)%>%
group_by(title)%>%
summarise(total=sum(grade),count=n())%>%
arrange(desc(total),desc(count))%>%
head()
## 媛?옣?넂?? ?룊?젏?쓽 ?쁺?솕 李얘린
top10_A=data%>%
select(title,grade)%>%
group_by(title)%>%
summarise(total=sum(grade),
count=n())%>%
arrange(desc(total),desc(count))%>%
head(10)
ggplot(data=top10_A,aes(x=reorder(title,total))) +
geom_col(fill='red') +
geom_text(aes(label=top10_A$total, hjust=-0.25))+
coord_flip()
setwd("../term")
setwd("D:/development/R_lecture/term")
getwd()
data = read.csv("sales_data_new.csv")
data = read.csv("sales_data_new.csv",encoding = "UTF-8")
head(data)
data[,3:10]
## 건강음료에 대한 다중 회귀 분석
helth_beverage=data[1:60,]
helth_beverage
helth_beverage_feature = helth_beverage[4:10]
helth_beverage_feature
vif(helth_beverage_feature)
cov(helth_beverage_feature)
cor(helth_beverage_feature)
model = lm(QTY~.,helth_beverage_feature)
summary(model)
setwd("D:/development/R_lecture/term")
data=read.csv("sales_data_new.csv")
class(data)
he <- data[1:60,]
fr <- data[61:120,]
te <- data[121:180,]
shapiro.test(health$PRICE)
shapiro.test(he$PRICE)
shapiro.test(he$YM)
shapiro.test(he$ITEM_CNT)
shapiro.test(he$QTY)
shapiro.test(he$MAXTEMP)
shapiro.test(he$SALEDAY)
shapiro.test(he$RAIN_DAY)
shapiro.test(he$HOLIDAY)
shapiro.test(fruit$PRICE)
shapiro.test(fruit$YM)
shapiro.test(fruit$ITEM_CNT) # 0.37
shapiro.test(fruit$QTY) # 0.255
shapiro.test(fruit$MAXTEMP)
shapiro.test(fruit$SALEDAY)
shapiro.test(fruit$RAIN_DAY)
shapiro.test(fruit$HOLIDAY)
## 과즙음료에 대한 다중 회귀 분석
juice_beverage=data[61:120,]
juice_beverage
juice_beverage_feature = juice_beverage[4:10]
juice_beverage_feature
cov(juice_beverage_feature)
cor(juice_beverage_feature)
lm.fit = lm(QTY~., data = juice_beverage_feature)
summary(lm.fit)
setwd("D:/development/R_lecture/term")
setwd("D:/development/R_lecture/term")
setwd("D:/development/R_lecture/term")
setwd("D:/development/R_lecture/term")
setwd("D:/development/R_lecture/term")
setwd("D:/development/R_lecture/term")
setwd("D:/development/R_lecture/term")
class(data)
he <- data[1:60,]
fr <- data[61:120,]
te <- data[121:180,]
vars <- c("QTY", "YM", "ITEM_CNT", "PRICE", "MAXTEMP", "SALEDAY","RAIN_DAY","HOLIDAY")
he <- he[,vars]
he
idx
idx
he_train <- he[idx,]
he_train
idx <- sample(1:nrow(he), size=nrow(he)*0.7, replace=F)
idx <- sample(1:nrow(he), size=nrow(he)*0.7, replace=F)
he_train <- he[idx,]
he_test <- he[-idx,]
he_train
library(nnet)
nnet.fit <- nnet(QTY~.,data=he_train, size=5)
summary(nnet.fit)
nnet.yhat <- predict(nnet.fit, newdata=he_test, type="raw")
mean((nnet.yhat-he_test$QTY)^2)
lm.fit2 <- step(lm.fit, method="both")
summary(lm.fit2)
lm.yhat2 <- predict(lm.fit2, newdata=he_test)
sqrt(mean((lm.yhat2-he_test$QTY)^2))
library(randomForest)
set.seed(1)
rf.fit <- randomForest(QTY~., data=he_train, mtry=6, importance=T)
rf.fit
importance(rf.fit)
rf.yhat <- predict(rf.fit, newdata=he_test)
mean((rf.yhat-he_test$QTY)^2)
mean((nnet.yhat-he_test$QTY)^2)
sqrt(mean((lm.yhat2-he_test$QTY)^2))
he_train <- he[1:45,]
he_test <- he[45,60,]
he_train
library(nnet)
nnet.fit <- nnet(QTY~.,data=he_train, size=5)
summary(nnet.fit)
nnet.yhat <- predict(nnet.fit, newdata=he_test, type="raw")
## forward와 backward 방식을 전부 써서 좋은 결과만 가져온다.(both)
lm.fit2 = step(lm.fit,method="both")
summary(lm.fit2)
## 잔차분석
anova(lm.fit2)
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=helth_beverage_feature,nbest=5)
summary(leaps)
plot(leaps)
setwd("D:/development/R_lecture/term")
getwd()
data = read.csv("sales_data_new.csv",encoding = "UTF-8")
head(data)
setwd("D:/development/R_lecture/term")
getwd()
data = read.csv("sales_data_new.csv",encoding = "UTF-8")
head(data)
data[,3:10]
## 건강음료에 대한 다중 회귀 분석
helth_beverage=data[1:60,]
## 건강음료에 대한 다중 회귀 분석
helth_beverage=data[1:60,]
helth_beverage
helth_beverage_feature = helth_beverage[4:10]
helth_beverage_feature
#vif(helth_beverage_feature)
cov(helth_beverage_feature)
cor(helth_beverage_feature)
model = lm(QTY~.,helth_beverage_feature)
setwd("D:/development/R_lecture/term")
getwd()
data = read.csv("sales_data_new.csv",encoding = "UTF-8")
head(data)
data[,3:10]
## 건강음료에 대한 다중 회귀 분석
helth_beverage=data[1:60,]
helth_beverage
helth_beverage_feature = helth_beverage[4:10]
helth_beverage_feature
#vif(helth_beverage_feature)
cov(helth_beverage_feature)
cor(helth_beverage_feature)
model = lm(QTY~.,helth_beverage_feature)
summary(model)
## Forward selection
model = lm(QTY~SALEDAY,helth_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE,helth_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE+ITEM_CNT,helth_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE+ITEM_CNT+MAXTEMP,helth_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE+ITEM_CNT+MAXTEMP+RAIN_DAY,helth_beverage_feature)
summary(model)
model = lm(QTY~SALEDAY+PRICE+ITEM_CNT+MAXTEMP+RAIN_DAY+HOLIDAY,helth_beverage_feature)
summary(model)
## 건강음료에 대한 다중 회귀 분석
helth_beverage=data[1:60,]
helth_beverage
helth_beverage_feature = helth_beverage[4:10]
helth_beverage_feature
model = step(lm(QTY~.,data=helth_beverage_feature),direction="forward")
model
model = step(lm(QTY~.,data=helth_beverage_feature),direction="forward")
step(lm(QTY~.,data=helth_beverage_feature),direction="forward")
step(lm(QTY~.,data=helth_beverage_feature),direction="backward")
## 과즙음료에 대한 다중 회귀 분석
juice_beverage=data[61:120,]
juice_beverage
juice_beverage_feature = juice_beverage[4:10]
juice_beverage_feature
cov(juice_beverage_feature)
cor(juice_beverage_feature)
## 차 음료에 대한 다중 회귀 분석
tea_beverage=data[120:180,]
tea_beverage
tea_beverage_feature = tea_beverage[4:10]
tea_beverage_feature
cov(tea_beverage_feature)
cor(tea_beverage_feature)
step(lm(QTY~.,data=helth_beverage_feature),direction="backward")
step(lm(QTY~.,data=helth_beverage_feature),direction="forward")
model = step(lm(QTY~.,data=helth_beverage_feature),direction="forward")
summary(model)
model = step(lm(QTY~.,data=helth_beverage_feature),direction="backward")
summary(model)
model = step(lm(QTY~.,data=helth_beverage_feature),direction="forward")
summary(model)
model = step(lm(QTY~.,data=helth_beverage_feature),direction="both")
summary(model)
## All Subsets Regression
library(leaps)
leaps=regsubsets(QTY~.,data=helth_beverage_feature,nbest=5)
summary(leaps)
plot(leaps)
#best
model = lm(QTY~SALEDAY+PRICE+RAIN_DAY,helth_beverage_feature)
summary(model)
