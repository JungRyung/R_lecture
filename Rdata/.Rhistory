sd(student)
english <- c(90,80,60,70)
math <- c(50,60,100,20)
df_midterm=data.frame(english,math)
df_midterm
class <- c(1,1,2,2)
df_midterm=data.frame(english,math,class)
df_midterm$english
df_midterm$english
mean(df_midterm$english)
sd(df_midterm$english)
var(df_midterm$english)
sqrt(var(df_midterm$english))
sale <-data.frame(fruit=c("사과","딸기","수박"),
price = c(1800,1500,3000)
)
sale
install.packages("readxl")
library(readxl)
setwd("c:\Rdata")
setwd("c:/Rdata")
wirte.csv(df_midterm, "df_midterm.csv")
write.csv(df_midterm, "df_midterm.csv")
sale <-data.frame(fruit=c("사과","딸기","수박"),
price = c(1800,1500,3000),
volume = c(24,35,14))
mean(sale)
mean(sale$price)
df_mid_test
df_mid_test
setwd("D:\development\R_lecture\Rdata")
setwd("D:\development\R_lecture\Rdata")
setwd("D:/development/R_lecture/Rdata")
write.csv(df_midterm, "df_midterm.csv")
df_mid_test <- read.csv("df_midterm.csv")
df_mid_test
plot.new()
plot.new()
hist(mpg$hwy)
lines(density(mpg$hwy),col=2)
hist(mpg$hwy.probability=T)
lines(density(mpg$hwy),col=2)
hist(mpg$hwy,probability=T)
lines(density(mpg$hwy),col=2, type = 'h')
lines(density(mpg$hwy),col=2, type = 'h',lwd=1)
shapiro.test(mpg$hwy)
## exam 데이터 파악하기
exam <- read.csv("csv_exam.csv")
exam
head(exam)
tail(exam)
view(exam)
View(exam)
dim(exam)
View(exam)
str(exam)
summary(exam)
mpg <- as.data.frame(ggplot2::mpg)
head(mpg)
tail(mpg)
View(mpg)
dim(mpg)
str(mpg)
boxplot(exam)
boxplot(exam$math)
hist(exam$math)
boxplot(exam$math, horizontal = T, col=2)
boxplot(exam$math, horizontal = T, col=4)
x=sample(0:100,80,replace = T)
x=sample(0:100,80,replace = F)
x=sample(0:100,80,replace = T)
plot(x,pch=ifelse(x>=60,7,15))
abline(h=60)
abline(h=60, col=2, lwd=2)
plot(x,pch=ifelse(x>=60,7,15), col=ifelse(x>=60))
plot(x,pch=ifelse(x>=60,7,15), col=ifelse(x>=60,2,4))
head(mpg)
tail(mpg)
## mpg 데이터 파악하기
mpg <- as.data.frame(ggplot2::mpg)
head(mpg)
tail(mpg)
View(mpg)
dim(mpg)
str(mpg)
install.packages("dplyr")
df_raw <- data.frame(var1 = c(1, 2, 1),
var2 = c(2, 3, 2))
df_raw
df_new
df_new <- df_raw  # 복사본 생성
df_new
df_new <- rename(df_new, v2 = var2)  # var2를 v2로 수정
df_new
# rename()
install.packages("reshape")
library(reshape)
df_new <- rename(df_new, v2 = var2)  # var2를 v2로 수정
df_new
df_new
source('D:/development/R_lecture/lec01.R', encoding = 'UTF-8', echo=TRUE)
df_new <- rename(df_new, v2 = var2)  # var2를 v2로 수정
df_new
rename(df_new, v2 = var2)  # var2를 v2로 수정
str(mpg)
## mpg 데이터 파악하기
mpg <- as.data.frame(ggplot2::mpg)
head(mpg)
tail(mpg)
View(mpg)
dim(mpg)
str(mpg)
## dplyr 패키지
install.packages("dplyr")
library(dplyr)
df_raw <- data.frame(var1 = c(1, 2, 1),
var2 = c(2, 3, 2))
df_raw
df_new <- df_raw  # 복사본 생성
df_new
## mpg 데이터 파악하기
mpg <- as.data.frame(ggplot2::mpg)
head(mpg)
tail(mpg)
View(mpg)
mpg
rename(mpg, city=cty)
mpg
rename(mpg, city=cty)
mpg
mpg <- rename(mpg, highway=hwy)
## mpg의 일부 출력
head(mpg)
write.csv(mpg, "mpg_new.csv")
## mpg 데이터 로드
mpg <- as.data.frame(ggplot2::mpg)
head(mpg)
tail(mpg)
View(mpg)
dim(mpg)
str(mpg)
## mpg colmn명 변경
mpg
mpg <- rename(mpg, city=cty)
mpg <- rename(mpg, highway=hwy)
## mpg의 일부 출력
head(mpg)
write.csv(mpg, "mpg_new.csv")
write.csv(mpg, "mpg_new.csv")
## 파생변수 만들기
df <- data.frame(var1 = c(4,3,8),
var2 = c(2,6,1))
df
df$var_sum = df$var1 + df$var2
df
df$var_mean = (df$var1 + df$var2)/2
df
mpg
## mpg 데이터 파악하기
mpg <- as.data.frame(ggplot2::mpg)
mpg$total <- (mpg$cty + mpg$hwy)/2
head(mpg)
summary(mpg$total)
boxplot(mpg$total)
boxplot(mpg$total, horizontal = T)
hist(mpg$total)
hist(mpg$total)
mpg$test = ifelse(mpg$total>=20,'pass','fail')
qplot(mpg$test)
head(mpg,3)
table(mpg$test)
mpg$grade <- ifelse(mpg$total >= 30, "A",
ifelse(mpg$total >= 20, "B", "C"))
qplot(mpg$grade)
# A, B, C, D 등급 부여
mpg$grade2 <- ifelse(mpg$total >= 30, "A",
ifelse(mpg$total >= 25, "B",
ifelse(mpg$total >= 20, "C", "D")))
qplot(mpg$grade2)
## midwest 분석
midwest <- as.data.frame(ggplot2::midwest)
head(midwest)
midwest <- rename(midwest, total=poptotal)
head(midwest)
midwest <- rename(midwest, asian=popasian)
midwest$ratio = midwest$asian / midwest$total * 100
head(midwest,3)
midwest$ratio = midwest$asian / midwest$total
head(midwest,3)
midwest$ratio = midwest$asian / midwest$total * 100
head(midwest,3)
hist(midwest$county)
hist(midwest$ratio)
mean(midwest$ratio)
midwest$group <- ifelse(midwest$ratio > 0.4872462, "large", "small")
gplot(midwest$group)
qplot(midwest$group)
table(midwest$group)
library(dplyr)
exam <- read.csv("csv_exam.csv")
exam
exam %>% filter(class==1)
class1
exam %>% filter(class==1 || class==3)
class13 = exam %>% filter(class==1 || class==3)
exam
class13
exam %>% filter(class != 1)
exam %>% filter(math>=50)
exam %>% filter(math>=50 & english>=60 & science>=50)
exam %>% filter(class==1 & math>=50 & english>=60 & science>=50)
exam %>% filter(class==1 | class==3 | class=5)
exam %>% filter(class==1 | class==3 | class==5)
exam %>% filter(class %in% c(1,3,5))
10%/%3
10%%3
mpg_a <- mpg %>% filter(displ <= 4)
mpg_b <- mpg %>% filter(displ >= 5)
mpg_a
mean(mpg_a%hwy)
mean(mpg_a$hwy)
mean(mpg_b$hwy)
## Q2
mpg_audi <- mpg %>% filter(manufacturer=='audi')
mpg_toyota<- mpg %>% filter(manufacturer=='toyota')
mean(mpg_audi$cty)
mean(mpg_toyota$cty)
## Q3
mpg_cfh <- mpg %>% filter(manufacturer %in% c('chevrolet','ford','honda'))
mpg_cfh
mean(mpg_cfh$hwy)
exam %>% select(math)
exam %>% select(math,english)
exam %>%
select(math,english,science) %>%
head(5)
tt=exam %>%
select(math,english,science) %>%
head(5)
tt
exam %>% select(-math)
exam %>% select(-math, -english)
exam %>% filter(class == 1) %>% select(english)
exam %>%
filter(class == 3) %>%
select(class, english)
exam %>%
filter(class == 3) %>%
select(class, english) %>%
head(3)
## 정렬하기
exam %>% arrange(math)
exam %>% arrange(desc(math))
exam %>% arrange(class, math)
## 파생변수 추가하기
kk=exam %>% mutate(total=math+english+science) %>%
head(10)
kk
kk %>%
mutate(round(avg=total/3),1) %>%
head(10)
## 파생변수 추가하기
kk=exam %>% mutate(total=math+english+science) %>%
head(10)
kk %>%
mutate(round(avg=total/3),1) %>%
head(10)
## 추가한 변수를 dplyr 코드에 바로 활용하기
exam %>%
mutate(total = math + english + science) %>%
arrange(total) %>%
head
exam
## 집단별로 요약하기
exam %>%
group_by(class)%>%
summarise(mean_math=mean(math))
exam %>%
gourp_by(class)%>%
summarise(mean_english = mean(english),
sum_eng=sum(english),
median_eng=median(english),
stuent_number=n())
exam %>%
group_by(class)%>%
summarise(mean_english = mean(english),
sum_eng=sum(english),
median_eng=median(english),
stuent_number=n())
mpg=as.data.frame(ggplot2::mpg)
mpg %>%
group_by(manufacturer,drv) %>%
summarise(mean_cty = mean(cty)) %>%
head(10)
mpg %>%
group_by(manufacturer,drv) %>%
summarise(mean_cty = mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(10)
# 중간고사 데이터 생성
test1 <- data.frame(id = c(1, 2, 3, 4, 5),
midterm = c(60, 80, 70, 90, 85))
# 기말고사 데이터 생성
test2 <- data.frame(id = c(1, 2, 3, 4, 5),
final = c(70, 83, 65, 95, 80))
test1
test2
total <- left_join(test1, test2, by = "id")
total
name <- data.frame(class = c(1, 2, 3, 4, 5),
teacher = c("kim", "lee", "park", "choi", "jung"))
name <- data.frame(class = c(1, 2, 3, 4, 5),
teacher = c("kim", "lee", "park", "choi", "jung"))
name
exam_new <- left_join(exam, name, by = "class")
exam
exam_new
# 학생 1~5번 시험 데이터 생성
group_a <- data.frame(id = c(1, 2, 3, 4, 5),
test = c(60, 80, 70, 90, 85))
# 학생 6~10번 시험 데이터 생성
group_b <- data.frame(id = c(6, 7, 8, 9, 10),
test = c(70, 83, 65, 95, 80))
group_all <- bind_rows(group_a,group_b)
group_all
### select와 filter 함수
mpg
### select와 filter 함수
tt=mpg %>%
select(class, cty)
tt
## Q2
tt %>%
filter(class=suv)
## Q2
tt %>%
filter(class==suv)
## Q2
tt %>%
filter(class=='suv')
## Q2
mpg_suv = tt %>%
filter(class=='suv')
mpg_suv
mpg_compact = tt %>%
filter(class=='compact')
mean(mpg_suv$cty)
mean(mpg_suv$cty)
mean(mpg_compact$cty)
### 순서대로 정렬
## Q1
mpg
### 순서대로 정렬
## Q1
mpg %>%
filter(manufacturer='audi') %>%
arrange(desc(hwy)) %>%
head()
### 순서대로 정렬
## Q1
mpg %>%
filter(manufacturer=='audi') %>%
arrange(desc(hwy)) %>%
head(5)
### 파생변수 추가하기
## Q1
mpg_new=mpg
mpg_new <- mpg_new %>% mutate(total=cty+hwy)
mpg_new <- mpg_new %>% mutate(mean=(total/2))
head(mpg_new)
## Q3
mpg_new %>% aarrange(desc(mean))
## Q3
mpg_new %>% arrange(desc(mean))
## Q3
mpg_new %>%
arrange(desc(mean))  %>%
head(3)
## Q3
mpg_new %>%
group_by(class)
## Q3
mpg_new %>%
group_by(class) %>%
arrange(desc(mean))  %>%
head(3)
## Q3
mpg_new %>%
arrange(desc(mean))  %>%
head(3)
## Q4
mpg %>%
mutate(total=cty+hwy,
mean=total/2) %>%
arrange(desc(mean)) %>%
head(3)
### 집단별로 요약하기
## Q1
mpg %>%
group_by(class)
### 집단별로 요약하기
## Q1
mpg %>%
group_by(class) %>%
summarise(mean_cty=mean(cty))
### 집단별로 요약하기
## Q1
mpg %>%
group_by(class) %>%
summarise(mean_cty=mean(cty))
## Q2
mpg %>%
group_by(class) %>%
summarise(mean_cty=mean(cty)) %>%
arrange(desc(mean_cty))
## Q3
mpg %>%
group_by(manufacturer) %>%
summarise(mean_hwy=mean(hwy)) %>%
arrange(desc(mean_hwy)) %>%
head(3)
## Q4
mpg %>%
group_by(manufacturer) %>%
summarise(compact_cnt=n(compact))
## Q4
mpg %>%
group_by(manufacturer) %>%
summarise(compact_cnt=n())
## Q4
mpg %>%
filter(class=='compact') %>%
group_by(manufacturer) %>%
summarise(compact_cnt=n())
## Q4
mpg %>%
filter(class=='compact') %>%
group_by(manufacturer) %>%
summarise(compact_cnt=n()) %>%
arrange(desc(compact_cnt))
### 데이터 합치기
##Q1
fuel <- data.frame(fl = c("c", "d", "e", "p", "r"),
price_fl = c(2.35, 2.38, 2.11, 2.76, 2.22),
stringsAsFactors = F)
fuel  # 출력
##Q1
mpg
##Q1
mpg <- left_join(mpg,fuel,by='fl')
mpg
##Q2
mpg %>%
select(model,fl,price_fl) %>%
head(5)
# 분석 도전
midwest
### 분석 도전
## Q1
midwest <- midwest %>%
mutate(ratio=poptotal)
### 분석 도전
## Q1
midwest <- as.data.frame(ggplot2::midwest)
midwest <- midwest %>%
mutate(ratio=(poptotal-popadults)/poptotal)
midwest <- midwest %>%
mutate(ratio=(poptotal-popadults)/poptotal) %>%
head(1)
midwest
midwest <- midwest %>%
mutate(ratio=(poptotal-popadults)/poptotal)
midwest
### 분석 도전
## Q1
midwest <- as.data.frame(ggplot2::midwest)
midwest <- midwest %>%
mutate(ratio=(poptotal-popadults)/poptotal)
midwest
### 분석 도전
## Q1
midwest <- as.data.frame(ggplot2::midwest)
midwest <- midwest %>%
mutate(ratio=(poptotal-popadults)/poptotal * 100)
## Q2
midwest %>%
select(county,ratio) %>%
arrange(desc(ratio)) %>%
head(5)
## Q3
midwest %>%
mutate(ratio_grade=ifelse(40>=,large,ifelse(30>=,middle,small)))
## Q3
midwest %>%
mutate(ratio_grade=ifelse(40>=,'large',ifelse(30>=,'middle','small')))
## Q3
midwest %>%
mutate(ratio_grade=ifelse(ratio>=40,'large',ifelse(ratio>=30,'middle','small')))
## Q3
midwest <- midwest %>%
mutate(ratio_grade=ifelse(ratio>=40,'large',ifelse(ratio>=30,'middle','small')))
table(midwest$ratio_grade)
## Q4
midwest <- midwest %>%
mutate(asian_ratio=popasian/poptotal*100)
midwest %>%
select(state,county,asian_ratio) %>%
arrange(asian_ratio)
midwest %>%
select(state,county,asian_ratio) %>%
arrange(asian_ratio) %>%
head(10)
